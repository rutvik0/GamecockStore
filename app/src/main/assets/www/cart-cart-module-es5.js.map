{"version":3,"sources":["webpack:///src/app/cart/cart.page.html","webpack:///src/app/cart/cart-routing.module.ts","webpack:///src/app/cart/cart.module.ts","webpack:///src/app/cart/cart.page.scss","webpack:///src/app/cart/cart.page.ts"],"names":["routes","path","component","CartPageRoutingModule","imports","forChild","exports","CartPageModule","declarations","CartPage","itemService","toastController","cart","total","count","product","uid","currentUser","getObservable","subscribe","data","updateTotal","console","log","item","deleteCart","id","i","cost","quantity","title","oid","Math","random","toString","substr","placeOrder","Date","orderToast","create","message","color","duration","toast","present","selector","template"],"mappings":"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","file":"cart-cart-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Cart</ion-title>\\n    <ion-button (click)=\\\"placeOrder()\\\" slot=\\\"end\\\"> Place Order </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let cart of cart\\\">\\n      <ion-item>\\n      <ion-thumbnail slot=\\\"start\\\">\\n        <ion-img [src]=\\\"cart.image\\\"></ion-img>\\n      </ion-thumbnail>\\n\\n      <ion-label>\\n        {{ cart.title }}\\n      </ion-label>\\n      <ion-label>\\n        {{ cart.quantity }}\\n      </ion-label>\\n      <ion-label>\\n       $ {{ cart.cost }}\\n      </ion-label>\\n    </ion-item>\\n    <ion-item-options side=\\\"end\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"delete(cart)\\\"><ion-icon name=\\\"trash\\\"></ion-icon></ion-button>\\n    </ion-item-options>\\n  </ion-item-sliding>\\n  </ion-list>\\n  <ion-item>\\n  Order Total: ${{total}}\\n</ion-item>\\n</ion-content>\\n<ion-item class=\\\"ion-padding\\\">\\n*slide on the item to delete\\n</ion-item>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartPage } from './cart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartPageRoutingModule } from './cart-routing.module';\n\nimport { CartPage } from './cart.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CartPageRoutingModule\n  ],\n  declarations: [CartPage]\n})\nexport class CartPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ItemService } from '../item.service';\nimport * as firebase from 'firebase';\nimport { ToastController } from '@ionic/angular'\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.page.html',\n  styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage implements OnInit {\n\n  cart = [];\n  total = 0;\n  count = 0;\n  product = \"\";\n  uid = firebase.auth().currentUser.uid;\n  constructor(public itemService:ItemService,\n    private toastController: ToastController) { \n    this.itemService.getObservable().subscribe((data) => {\n      this.cart = this.itemService.cart;\n       this.updateTotal();\n    });\n    this.cart = this.itemService.cart;\n\n    if (firebase.auth().currentUser == null) {\n      console.log(\"User not logged in\");\n    }\n    this.updateTotal();\n  }\n\n  ngOnInit() {\n  }\n\n  delete(item) {\n    this.itemService.deleteCart(item.id);\n  }\n  updateTotal() {\n    this.total = 0;\n    this.count = 0;\n    this.product = \"\";\n    for (let i of this.cart) {\n      this.total += i.cost;\n      this.product += i.quantity + \"x \" + i.title + \" $\" +i.cost+ \" \\n\\r\\n\";\n      this.count++;\n    }\n  }\n\n  placeOrder() {\n    let oid = Math.random().toString(36).substr(2, 5);\n    this.itemService.placeOrder(this.cart,oid,this.uid,this.total,Date(),this.count);\n    for(let i of this.cart) {\n      this.itemService.deleteCart(i.id);\n    }\n    this.orderToast();\n  }\n  async orderToast() {\n    const toast = await this.toastController.create({\n      message: 'Item order has been placed',\n      color:'success',\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"]}