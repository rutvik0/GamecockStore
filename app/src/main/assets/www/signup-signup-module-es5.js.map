{"version":3,"sources":["webpack:///src/app/signup/signup.page.html","webpack:///src/app/signup/signup-routing.module.ts","webpack:///src/app/signup/signup.module.ts","webpack:///src/app/signup/signup.page.scss","webpack:///src/app/signup/signup.page.ts"],"names":["routes","path","component","SignupPageRoutingModule","imports","forChild","exports","SignupPageModule","declarations","SignupPage","router","toastController","user","email","password","type","acc","imgfile","create","color","message","position","duration","toast","present","console","log","usertype","self","createUserWithEmailAndPassword","error","errorCode","code","errorMessage","length","then","result","currentUser","db","collection","add","uid","docRef","id","presentToast","navigate","arguments","reset","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,uBAAuB;AAAA;AAAA,KAApC;;AAAaA,2BAAuB,6DAJnC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAT5B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORI,kBAAY,EAAE,CAAC,uDAAD;AAPN,KAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAaE,UAAU;AAWnB,0BAAoBC,MAApB,EACUC,eADV,EAC2C;AAAA;;AADvB,aAAAD,MAAA,GAAAA,MAAA;AACV,aAAAC,eAAA,GAAAA,eAAA;AAVZ,aAAAC,IAAA,GAAK;AACHC,eAAK,EAAC,EADH;AAEHC,kBAAQ,EAAC,EAFN;AAGHC,cAAI,EAAC;AAHF,SAAL;AAKA,aAAAC,GAAA,GAAa,SAAb;AAEE,aAAAC,OAAA,GAAU,mBAAV;AAG8C;;AAZ3B;AAAA;AAAA,mCAcR,CACV;AAfkB;AAAA;AAAA,uCAiBE;;;;;;;;AACL,2BAAM,KAAKN,eAAL,CAAqBO,MAArB,CAA4B;AAC9CC,2BAAK,EAAC,SADwC;AAE9CC,6BAAO,EAAE,uCAFqC;AAG9CC,8BAAQ,EAAC,KAHqC;AAI9CC,8BAAQ,EAAE;AAJoC,qBAA5B,CAAN;;;AAARC,yB;AAMNA,yBAAK,CAACC,OAAN;;;;;;;;;AACD;AAzBkB;AAAA;AAAA,iCA2Bb;AACJC,iBAAO,CAACC,GAAR,CAAY,KAAKd,IAAL,CAAUC,KAAV,GAAgB,IAAhB,GAAqB,KAAKD,IAAL,CAAUE,QAA3C;AACA,cAAID,KAAK,GAAC,KAAKD,IAAL,CAAUC,KAApB;AACA,cAAIC,QAAQ,GAAC,KAAKF,IAAL,CAAUE,QAAvB;AACA,cAAIC,IAAI,GAAG,KAAKH,IAAL,CAAUG,IAArB;;AACA,cAAGA,IAAI,IAAI,IAAX,EAAiB;AACf,gBAAIY,QAAQ,GAAG,OAAf;AACD,WAFD,MAGK;AACH,gBAAIA,QAAQ,GAAG,SAAf;AACD;;AACD,cAAIC,IAAI,GAAG,IAAX;AAGA,0DAAgBC,8BAAhB,CAA+ChB,KAA/C,EAAsDC,QAAtD,WACE,UAASgB,KAAT,EAAgB;AAClB;AACAL,mBAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,gBAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,gBAAIC,YAAY,GAAGH,KAAK,CAACV,OAAzB;AACAK,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACV,OAAlB;;AACA,gBAAGW,SAAS,CAACG,MAAV,GAAmB,CAAtB,EAAwB;AACtBT,qBAAO,CAACC,GAAR,CAAY,QAAZ;AACD,aAFD,MAGI;AACFD,qBAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,WAbC,EAaCS,IAbD,CAaM,UAASC,MAAT,EAAe;AACrB,gBAAIxB,IAAI,GAAE,gDAAgByB,WAA1B;AACF,gBAAIC,EAAE,GAAG,oDAAT;AACQA,cAAE,CAACC,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8B;AAC5B,qBAAM5B,IAAI,CAAC6B,GADiB;AAE5B,0BAAYd;AAFgB,aAA9B,EAIHQ,IAJG,CAIE,UAASO,MAAT,EAAiB;AACnBjB,qBAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCgB,MAAM,CAACC,EAAhD;AACH,aANG,WAOG,UAASb,KAAT,EAAgB;AACnBL,qBAAO,CAACK,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH,aATG;AAWPL,mBAAO,CAACC,GAAR,CAAY,2BAAZ;AACGD,mBAAO,CAACC,GAAR,CAAYd,IAAI,CAAC6B,GAAjB;AACAb,gBAAI,CAACgB,YAAL;AACAhB,gBAAI,CAAClB,MAAL,CAAYmC,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACH,WA/BC;;AAiCF,iEAAQC,SAAR,CAAkBC,KAAlB;AACC;AA3EkB;AAAA;AAAA,kCA8ET;AACR,cAAG,KAAKnC,IAAL,CAAUG,IAAV,IAAkB,KAArB,EACA,KAAKC,GAAL,GAAW,OAAX,CADA,KAGA,KAAKA,GAAL,GAAW,SAAX;AACD;AAnFkB;;AAAA;AAAA,OAAvB;;;;cAW+B;;cACD;;;;AAZjBP,cAAU,6DALtB,gEAAU;AACTuC,cAAQ,EAAE,YADD;AAETC,cAAQ,EAAR;AAAA;AAAA,4FAFS;;;;AAAA,KAAV,CAKsB,GAAVxC,UAAU,CAAV","file":"signup-signup-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-title>Signup</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <ion-img [src]=\\\"imgfile\\\"></ion-img>\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Email</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" required></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Password</ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.password\\\" required></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\"> Seller Account?</ion-label>\\n    <ion-toggle [(ngModel)]=\\\"user.type\\\" (click)=\\\"accType()\\\"></ion-toggle>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\"> Account type set to: {{acc}} </ion-label>\\n  </ion-item>\\n  <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" (click)=\\\"signup()\\\">Sign up</ion-button>\\n  \\n  </ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { NgForm, NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n\n  user={\n    email:\"\",\n    password:\"\",\n    type:false};\n  \n  acc:string = \"Visitor\";\n\n    imgfile = \"/assets/white.png\";\n  \n    constructor(private router:Router,\n      private toastController:ToastController) { }\n  \n    ngOnInit() {\n    }\n  \n    async presentToast() {\n      const toast = await this.toastController.create({\n        color:'success',\n        message: 'Account Created! Login to get started',\n        position:'top',\n        duration: 2000\n      });\n      toast.present();\n    }\n\n    signup(){\n      console.log(this.user.email+\"  \"+this.user.password)\n      var email=this.user.email;\n      var password=this.user.password;\n      var type = this.user.type;\n      if(type == true) {\n        var usertype = \"owner\";\n      }\n      else {\n        var usertype = \"visitor\";\n      }\n      var self = this;\n\n\n      firebase.auth().createUserWithEmailAndPassword(email, password).catch(\n        function(error) {\n      // Handle Errors here.\n      console.log(error);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(error.message);\n      if(errorCode.length > 0){\n        console.log(\"Failed\");\n      }\n      else{\n        console.log(\"signup ok\")\n      }\n    }).then(function(result){\n      var user= firebase.auth().currentUser;\n\t\t\t var db = firebase.firestore();\n\t\t          db.collection(\"usertype\").add({\n\t\t            'uid':user.uid,\n\t\t            'usertype': usertype\n\t\t      })\n\t\t      .then(function(docRef) {\n\t\t          console.log(\"usetype written with ID: \", docRef.id);\n\t\t      })\n\t\t      .catch(function(error) {\n\t\t          console.error(\"Error adding document: \", error);\n\t\t      });\n\n\t\t  \tconsole.log(\"finished creating account\")\n        console.log(user.uid);\n        self.presentToast();\n        self.router.navigate([\"/login\"]);\n    });\n\n    NgModel.arguments.reset();\n    }\n\n    \n    accType() {\n      if(this.user.type == false)\n      this.acc = \"Owner\";\n      else\n      this.acc = \"Visitor\";\n    }\n  }\n\n"]}