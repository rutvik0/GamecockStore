{"version":3,"sources":["webpack:///src/app/update-product/update-product.page.html","webpack:///src/app/update-product/update-product-routing.module.ts","webpack:///src/app/update-product/update-product.module.ts","webpack:///src/app/update-product/update-product.page.scss","webpack:///src/app/update-product/update-product.page.ts"],"names":["routes","path","component","UpdateProductPageRoutingModule","imports","forChild","exports","UpdateProductPageModule","declarations","UpdateProductPage","formBuilder","route","itemService","router","alertController","toastController","edit_item_form","group","title","required","price","description","console","log","params","subscribe","param","current_item","patchValue","getUsertype","create","header","message","buttons","text","role","cssClass","handler","blah","deleteItem","id","deleteToast","alert","present","presentToast","color","duration","toast","value","newValues","category","image","uid","updateProduct","goBack","navigate","selector","template"],"mappings":"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","file":"update-product-update-product-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Edit Product</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"deleteItem()\\\"><ion-icon name=\\\"trash-outline\\\"></ion-icon></ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"edit_item_form\\\" (submit)=\\\"updateItem(edit_item_form.value)\\\">\\n    <ion-item>\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Title</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"title\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item >\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\" > Product Price (numbers only) </ion-label>\\n      <ion-input type=\\\"number\\\" formControlName=\\\"price\\\" required> </ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Description</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"description\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" >Update</ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateProductPage } from './update-product.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateProductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateProductPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateProductPageRoutingModule } from './update-product-routing.module';\n\nimport { UpdateProductPage } from './update-product.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UpdateProductPageRoutingModule\n  ],\n  declarations: [UpdateProductPage]\n})\nexport class UpdateProductPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1wcm9kdWN0L3VwZGF0ZS1wcm9kdWN0LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { ItemService } from '../item.service';\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.page.html',\n  styleUrls: ['./update-product.page.scss'],\n})\nexport class UpdateProductPage implements OnInit {\n\n  current_item:any;\n  edit_item_form:FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private itemService: ItemService,\n    private router:Router,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) { \n    this.edit_item_form = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      price: new FormControl(\"\", Validators.required),\n      description: new FormControl(\"\", Validators.required),\n    });\n  }\n\n  ngOnInit() {\n    console.log(\"onInit\")\n  \t\tthis.route.params.subscribe(\n      param => {\n        this.current_item = param;\n        console.log(this.current_item);\n\n        this.edit_item_form.patchValue({title:this.current_item.title});\n        this.edit_item_form.patchValue({price:this.current_item.price})\n        this.edit_item_form.patchValue({description:this.current_item.description});\n\n      })\n  }\n\n  async deleteItem(){\n    if(this.itemService.getUsertype() == 'owner') {\n   const alert = await this.alertController.create({\n     header: 'Delete Item?',\n     message: 'You are about to delete this item. Are you sure?',\n     buttons: [\n       {\n         text: 'Cancel',\n         role: 'cancel',\n         cssClass: 'secondary',\n         handler: (blah) => {\n           console.log('Delete Canceled');\n         }\n       }, {\n         text: 'Yes',\n         handler: () => {\n           console.log('Confirm Okay');\n           this.itemService.deleteItem(this.current_item.id);\n           this.deleteToast();\n         }\n       }\n     ]\n   });\n\n   await alert.present();\n }\n else {\n   this.presentToast();\n }\n }\n\n async presentToast() {\n  const toast = await this.toastController.create({\n    message: 'Only an owner can delete items.',\n    color:'danger',\n    duration: 2000\n  });\n  toast.present();\n}\nasync deleteToast() {\n  const toast = await this.toastController.create({\n    message: 'Item Deleted',\n    color:'tertiary',\n    duration: 2000\n  });\n  toast.present();\n}\n\n  updateItem(value) {\n    console.log(this.current_item.id);\n    console.log(this.current_item.title);\n    const newValues = {\n      id: this.current_item.id,\n      category: this.current_item.category,\n      description: value.description,\n      image: this.current_item.image,\n      price: value.price,\n      title: value.title,\n      uid: this.current_item.uid\n    }\n\n    this.itemService.updateProduct(newValues,this.current_item.id);\n    this.goBack();\n  }\n\n  goBack(){\n    this.router.navigate([\"tabs/tab1\"]);\n  }\n\n}\n"]}